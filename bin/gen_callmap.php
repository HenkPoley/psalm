<?php

declare(strict_types=1);

use DG\BypassFinals;
use Psalm\Internal\Analyzer\ProjectAnalyzer;
use Psalm\Internal\Provider\FileProvider;
use Psalm\Internal\Provider\Providers;
use Psalm\Tests\TestConfig;
use Webmozart\Assert\Assert;

require 'vendor/autoload.php';
require __DIR__ . '/gen_callmap_utils.php';

BypassFinals::enable();

new ProjectAnalyzer(new TestConfig, new Providers(new FileProvider));

$codebase = ProjectAnalyzer::getInstance()->getCodebase();

// Load+normalize autogenerated maps
$baseMaps = [];
foreach (glob(__DIR__."/../dictionaries/autogen/CallMap_*.php") as $file) {
    Assert::eq(preg_match('/_(\d+)\.php/', $file, $matches), 1);
    $version = $matches[1];

    $baseMaps[$version] = normalizeCallMap(require $file);
    writeCallMap($file, $baseMaps[$version]);
}

ksort($baseMaps);
$last = array_key_last($baseMaps);

// Load+normalize hand-written diff maps
$customMaps = [
    84 => require __DIR__."/../dictionaries/override/CallMap.php"
];

$customDiffs = [];
foreach (glob(__DIR__."/../dictionaries/override/CallMap_*.php") as $file) {
    if (!preg_match('/_(\d+)_delta\.php/', $file, $matches)) continue;
    $version = $matches[1];
    $customDiffs[$version] = normalizeCallMap(require $file);
}
krsort($customDiffs);

$versions = array_reverse(array_keys($customDiffs));

// Merge hand-written diff maps to generate hand-written full maps
foreach ($customDiffs as $version => $customDiff) {
    $customMap = $customMaps[$version];

    foreach ($customDiff['removed'] as $func => $descr) {
        $customMap[$func] = $descr;
    }
    foreach ($customDiff['added'] as $func => $descr) {
        unset($customMap[$func]);
    }
    foreach ($customDiff['changed'] as $func => $sub) {
        $customMap[$func] = $sub['old'];
    }

    $prevVersion = array_search($version, $versions)-1;
    if ($prevVersion < 0) {
        continue;
    }
    $customMaps[$versions[$prevVersion]] = $customMap;
}
krsort($customMaps);