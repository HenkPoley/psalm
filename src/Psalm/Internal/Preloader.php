<?php

declare(strict_types=1);

namespace Psalm\Internal;

/** @internal */
final class Preloader {
    private static bool $preloaded = false; 
    public static function preload(): void {
        if (self::$preloaded) {
            return;
        }
        class_exists(\PhpParser\Builder::class);
        class_exists(\PhpParser\BuilderFactory::class);
        class_exists(\PhpParser\BuilderHelpers::class);
        class_exists(\PhpParser\Builder\ClassConst::class);
        class_exists(\PhpParser\Builder\Class_::class);
        class_exists(\PhpParser\Builder\Declaration::class);
        class_exists(\PhpParser\Builder\EnumCase::class);
        class_exists(\PhpParser\Builder\Enum_::class);
        class_exists(\PhpParser\Builder\FunctionLike::class);
        class_exists(\PhpParser\Builder\Function_::class);
        class_exists(\PhpParser\Builder\Interface_::class);
        class_exists(\PhpParser\Builder\Method::class);
        class_exists(\PhpParser\Builder\Namespace_::class);
        class_exists(\PhpParser\Builder\Param::class);
        class_exists(\PhpParser\Builder\Property::class);
        class_exists(\PhpParser\Builder\TraitUse::class);
        class_exists(\PhpParser\Builder\TraitUseAdaptation::class);
        class_exists(\PhpParser\Builder\Trait_::class);
        class_exists(\PhpParser\Builder\Use_::class);
        class_exists(\PhpParser\Comment::class);
        class_exists(\PhpParser\Comment\Doc::class);
        class_exists(\PhpParser\ConstExprEvaluationException::class);
        class_exists(\PhpParser\ConstExprEvaluator::class);
        class_exists(\PhpParser\Error::class);
        class_exists(\PhpParser\ErrorHandler::class);
        class_exists(\PhpParser\ErrorHandler\Collecting::class);
        class_exists(\PhpParser\ErrorHandler\Throwing::class);
        class_exists(\PhpParser\Internal\DiffElem::class);
        class_exists(\PhpParser\Internal\Differ::class);
        class_exists(\PhpParser\Internal\PrintableNewAnonClassNode::class);
        class_exists(\PhpParser\Internal\TokenPolyfill::class);
        class_exists(\PhpParser\Internal\TokenStream::class);
        class_exists(\PhpParser\JsonDecoder::class);
        class_exists(\PhpParser\Lexer::class);
        class_exists(\PhpParser\Lexer\Emulative::class);
        class_exists(\PhpParser\Lexer\TokenEmulator\AsymmetricVisibilityTokenEmulator::class);
        class_exists(\PhpParser\Lexer\TokenEmulator\AttributeEmulator::class);
        class_exists(\PhpParser\Lexer\TokenEmulator\EnumTokenEmulator::class);
        class_exists(\PhpParser\Lexer\TokenEmulator\ExplicitOctalEmulator::class);
        class_exists(\PhpParser\Lexer\TokenEmulator\KeywordEmulator::class);
        class_exists(\PhpParser\Lexer\TokenEmulator\MatchTokenEmulator::class);
        class_exists(\PhpParser\Lexer\TokenEmulator\NullsafeTokenEmulator::class);
        class_exists(\PhpParser\Lexer\TokenEmulator\PropertyTokenEmulator::class);
        class_exists(\PhpParser\Lexer\TokenEmulator\ReadonlyFunctionTokenEmulator::class);
        class_exists(\PhpParser\Lexer\TokenEmulator\ReadonlyTokenEmulator::class);
        class_exists(\PhpParser\Lexer\TokenEmulator\ReverseEmulator::class);
        class_exists(\PhpParser\Lexer\TokenEmulator\TokenEmulator::class);
        class_exists(\PhpParser\Modifiers::class);
        class_exists(\PhpParser\NameContext::class);
        class_exists(\PhpParser\Node::class);
        class_exists(\PhpParser\NodeAbstract::class);
        class_exists(\PhpParser\NodeDumper::class);
        class_exists(\PhpParser\NodeFinder::class);
        class_exists(\PhpParser\NodeTraverser::class);
        class_exists(\PhpParser\NodeTraverserInterface::class);
        class_exists(\PhpParser\NodeVisitor::class);
        class_exists(\PhpParser\NodeVisitorAbstract::class);
        class_exists(\PhpParser\NodeVisitor\CloningVisitor::class);
        class_exists(\PhpParser\NodeVisitor\CommentAnnotatingVisitor::class);
        class_exists(\PhpParser\NodeVisitor\FindingVisitor::class);
        class_exists(\PhpParser\NodeVisitor\FirstFindingVisitor::class);
        class_exists(\PhpParser\NodeVisitor\NameResolver::class);
        class_exists(\PhpParser\NodeVisitor\NodeConnectingVisitor::class);
        class_exists(\PhpParser\NodeVisitor\ParentConnectingVisitor::class);
        class_exists(\PhpParser\Node\Arg::class);
        class_exists(\PhpParser\Node\ArrayItem::class);
        class_exists(\PhpParser\Node\Attribute::class);
        class_exists(\PhpParser\Node\AttributeGroup::class);
        class_exists(\PhpParser\Node\ClosureUse::class);
        class_exists(\PhpParser\Node\ComplexType::class);
        class_exists(\PhpParser\Node\Const_::class);
        class_exists(\PhpParser\Node\DeclareItem::class);
        class_exists(\PhpParser\Node\Expr::class);
        class_exists(\PhpParser\Node\Expr\ArrayDimFetch::class);
        class_exists(\PhpParser\Node\Expr\ArrayItem::class);
        class_exists(\PhpParser\Node\Expr\Array_::class);
        class_exists(\PhpParser\Node\Expr\ArrowFunction::class);
        class_exists(\PhpParser\Node\Expr\Assign::class);
        class_exists(\PhpParser\Node\Expr\AssignOp::class);
        class_exists(\PhpParser\Node\Expr\AssignOp\BitwiseAnd::class);
        class_exists(\PhpParser\Node\Expr\AssignOp\BitwiseOr::class);
        class_exists(\PhpParser\Node\Expr\AssignOp\BitwiseXor::class);
        class_exists(\PhpParser\Node\Expr\AssignOp\Coalesce::class);
        class_exists(\PhpParser\Node\Expr\AssignOp\Concat::class);
        class_exists(\PhpParser\Node\Expr\AssignOp\Div::class);
        class_exists(\PhpParser\Node\Expr\AssignOp\Minus::class);
        class_exists(\PhpParser\Node\Expr\AssignOp\Mod::class);
        class_exists(\PhpParser\Node\Expr\AssignOp\Mul::class);
        class_exists(\PhpParser\Node\Expr\AssignOp\Plus::class);
        class_exists(\PhpParser\Node\Expr\AssignOp\Pow::class);
        class_exists(\PhpParser\Node\Expr\AssignOp\ShiftLeft::class);
        class_exists(\PhpParser\Node\Expr\AssignOp\ShiftRight::class);
        class_exists(\PhpParser\Node\Expr\AssignRef::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\BitwiseAnd::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\BitwiseOr::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\BitwiseXor::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\BooleanAnd::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\BooleanOr::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\Coalesce::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\Concat::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\Div::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\Equal::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\Greater::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\GreaterOrEqual::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\Identical::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\LogicalAnd::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\LogicalOr::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\LogicalXor::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\Minus::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\Mod::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\Mul::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\NotEqual::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\NotIdentical::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\Plus::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\Pow::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\ShiftLeft::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\ShiftRight::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\Smaller::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\SmallerOrEqual::class);
        class_exists(\PhpParser\Node\Expr\BinaryOp\Spaceship::class);
        class_exists(\PhpParser\Node\Expr\BitwiseNot::class);
        class_exists(\PhpParser\Node\Expr\BooleanNot::class);
        class_exists(\PhpParser\Node\Expr\CallLike::class);
        class_exists(\PhpParser\Node\Expr\Cast::class);
        class_exists(\PhpParser\Node\Expr\Cast\Array_::class);
        class_exists(\PhpParser\Node\Expr\Cast\Bool_::class);
        class_exists(\PhpParser\Node\Expr\Cast\Double::class);
        class_exists(\PhpParser\Node\Expr\Cast\Int_::class);
        class_exists(\PhpParser\Node\Expr\Cast\Object_::class);
        class_exists(\PhpParser\Node\Expr\Cast\String_::class);
        class_exists(\PhpParser\Node\Expr\Cast\Unset_::class);
        class_exists(\PhpParser\Node\Expr\ClassConstFetch::class);
        class_exists(\PhpParser\Node\Expr\Clone_::class);
        class_exists(\PhpParser\Node\Expr\Closure::class);
        class_exists(\PhpParser\Node\Expr\ClosureUse::class);
        class_exists(\PhpParser\Node\Expr\ConstFetch::class);
        class_exists(\PhpParser\Node\Expr\Empty_::class);
        class_exists(\PhpParser\Node\Expr\Error::class);
        class_exists(\PhpParser\Node\Expr\ErrorSuppress::class);
        class_exists(\PhpParser\Node\Expr\Eval_::class);
        class_exists(\PhpParser\Node\Expr\Exit_::class);
        class_exists(\PhpParser\Node\Expr\FuncCall::class);
        class_exists(\PhpParser\Node\Expr\Include_::class);
        class_exists(\PhpParser\Node\Expr\Instanceof_::class);
        class_exists(\PhpParser\Node\Expr\Isset_::class);
        class_exists(\PhpParser\Node\Expr\List_::class);
        class_exists(\PhpParser\Node\Expr\Match_::class);
        class_exists(\PhpParser\Node\Expr\MethodCall::class);
        class_exists(\PhpParser\Node\Expr\New_::class);
        class_exists(\PhpParser\Node\Expr\NullsafeMethodCall::class);
        class_exists(\PhpParser\Node\Expr\NullsafePropertyFetch::class);
        class_exists(\PhpParser\Node\Expr\PostDec::class);
        class_exists(\PhpParser\Node\Expr\PostInc::class);
        class_exists(\PhpParser\Node\Expr\PreDec::class);
        class_exists(\PhpParser\Node\Expr\PreInc::class);
        class_exists(\PhpParser\Node\Expr\Print_::class);
        class_exists(\PhpParser\Node\Expr\PropertyFetch::class);
        class_exists(\PhpParser\Node\Expr\ShellExec::class);
        class_exists(\PhpParser\Node\Expr\StaticCall::class);
        class_exists(\PhpParser\Node\Expr\StaticPropertyFetch::class);
        class_exists(\PhpParser\Node\Expr\Ternary::class);
        class_exists(\PhpParser\Node\Expr\Throw_::class);
        class_exists(\PhpParser\Node\Expr\UnaryMinus::class);
        class_exists(\PhpParser\Node\Expr\UnaryPlus::class);
        class_exists(\PhpParser\Node\Expr\Variable::class);
        class_exists(\PhpParser\Node\Expr\YieldFrom::class);
        class_exists(\PhpParser\Node\Expr\Yield_::class);
        class_exists(\PhpParser\Node\FunctionLike::class);
        class_exists(\PhpParser\Node\Identifier::class);
        class_exists(\PhpParser\Node\InterpolatedStringPart::class);
        class_exists(\PhpParser\Node\IntersectionType::class);
        class_exists(\PhpParser\Node\MatchArm::class);
        class_exists(\PhpParser\Node\Name::class);
        class_exists(\PhpParser\Node\Name\FullyQualified::class);
        class_exists(\PhpParser\Node\Name\Relative::class);
        class_exists(\PhpParser\Node\NullableType::class);
        class_exists(\PhpParser\Node\Param::class);
        class_exists(\PhpParser\Node\PropertyHook::class);
        class_exists(\PhpParser\Node\PropertyItem::class);
        class_exists(\PhpParser\Node\Scalar::class);
        class_exists(\PhpParser\Node\Scalar\DNumber::class);
        class_exists(\PhpParser\Node\Scalar\Encapsed::class);
        class_exists(\PhpParser\Node\Scalar\EncapsedStringPart::class);
        class_exists(\PhpParser\Node\Scalar\Float_::class);
        class_exists(\PhpParser\Node\Scalar\Int_::class);
        class_exists(\PhpParser\Node\Scalar\InterpolatedString::class);
        class_exists(\PhpParser\Node\Scalar\LNumber::class);
        class_exists(\PhpParser\Node\Scalar\MagicConst::class);
        class_exists(\PhpParser\Node\Scalar\MagicConst\Class_::class);
        class_exists(\PhpParser\Node\Scalar\MagicConst\Dir::class);
        class_exists(\PhpParser\Node\Scalar\MagicConst\File::class);
        class_exists(\PhpParser\Node\Scalar\MagicConst\Function_::class);
        class_exists(\PhpParser\Node\Scalar\MagicConst\Line::class);
        class_exists(\PhpParser\Node\Scalar\MagicConst\Method::class);
        class_exists(\PhpParser\Node\Scalar\MagicConst\Namespace_::class);
        class_exists(\PhpParser\Node\Scalar\MagicConst\Property::class);
        class_exists(\PhpParser\Node\Scalar\MagicConst\Trait_::class);
        class_exists(\PhpParser\Node\Scalar\String_::class);
        class_exists(\PhpParser\Node\StaticVar::class);
        class_exists(\PhpParser\Node\Stmt::class);
        class_exists(\PhpParser\Node\Stmt\Block::class);
        class_exists(\PhpParser\Node\Stmt\Break_::class);
        class_exists(\PhpParser\Node\Stmt\Case_::class);
        class_exists(\PhpParser\Node\Stmt\Catch_::class);
        class_exists(\PhpParser\Node\Stmt\ClassConst::class);
        class_exists(\PhpParser\Node\Stmt\ClassLike::class);
        class_exists(\PhpParser\Node\Stmt\ClassMethod::class);
        class_exists(\PhpParser\Node\Stmt\Class_::class);
        class_exists(\PhpParser\Node\Stmt\Const_::class);
        class_exists(\PhpParser\Node\Stmt\Continue_::class);
        class_exists(\PhpParser\Node\Stmt\DeclareDeclare::class);
        class_exists(\PhpParser\Node\Stmt\Declare_::class);
        class_exists(\PhpParser\Node\Stmt\Do_::class);
        class_exists(\PhpParser\Node\Stmt\Echo_::class);
        class_exists(\PhpParser\Node\Stmt\ElseIf_::class);
        class_exists(\PhpParser\Node\Stmt\Else_::class);
        class_exists(\PhpParser\Node\Stmt\EnumCase::class);
        class_exists(\PhpParser\Node\Stmt\Enum_::class);
        class_exists(\PhpParser\Node\Stmt\Expression::class);
        class_exists(\PhpParser\Node\Stmt\Finally_::class);
        class_exists(\PhpParser\Node\Stmt\For_::class);
        class_exists(\PhpParser\Node\Stmt\Foreach_::class);
        class_exists(\PhpParser\Node\Stmt\Function_::class);
        class_exists(\PhpParser\Node\Stmt\Global_::class);
        class_exists(\PhpParser\Node\Stmt\Goto_::class);
        class_exists(\PhpParser\Node\Stmt\GroupUse::class);
        class_exists(\PhpParser\Node\Stmt\HaltCompiler::class);
        class_exists(\PhpParser\Node\Stmt\If_::class);
        class_exists(\PhpParser\Node\Stmt\InlineHTML::class);
        class_exists(\PhpParser\Node\Stmt\Interface_::class);
        class_exists(\PhpParser\Node\Stmt\Label::class);
        class_exists(\PhpParser\Node\Stmt\Namespace_::class);
        class_exists(\PhpParser\Node\Stmt\Nop::class);
        class_exists(\PhpParser\Node\Stmt\Property::class);
        class_exists(\PhpParser\Node\Stmt\PropertyProperty::class);
        class_exists(\PhpParser\Node\Stmt\Return_::class);
        class_exists(\PhpParser\Node\Stmt\StaticVar::class);
        class_exists(\PhpParser\Node\Stmt\Static_::class);
        class_exists(\PhpParser\Node\Stmt\Switch_::class);
        class_exists(\PhpParser\Node\Stmt\TraitUse::class);
        class_exists(\PhpParser\Node\Stmt\TraitUseAdaptation::class);
        class_exists(\PhpParser\Node\Stmt\TraitUseAdaptation\Alias::class);
        class_exists(\PhpParser\Node\Stmt\TraitUseAdaptation\Precedence::class);
        class_exists(\PhpParser\Node\Stmt\Trait_::class);
        class_exists(\PhpParser\Node\Stmt\TryCatch::class);
        class_exists(\PhpParser\Node\Stmt\Unset_::class);
        class_exists(\PhpParser\Node\Stmt\UseUse::class);
        class_exists(\PhpParser\Node\Stmt\Use_::class);
        class_exists(\PhpParser\Node\Stmt\While_::class);
        class_exists(\PhpParser\Node\UnionType::class);
        class_exists(\PhpParser\Node\UseItem::class);
        class_exists(\PhpParser\Node\VarLikeIdentifier::class);
        class_exists(\PhpParser\Node\VariadicPlaceholder::class);
        class_exists(\PhpParser\Parser::class);
        class_exists(\PhpParser\ParserAbstract::class);
        class_exists(\PhpParser\ParserFactory::class);
        class_exists(\PhpParser\Parser\Php7::class);
        class_exists(\PhpParser\Parser\Php8::class);
        class_exists(\PhpParser\PhpVersion::class);
        class_exists(\PhpParser\PrettyPrinter::class);
        class_exists(\PhpParser\PrettyPrinterAbstract::class);
        class_exists(\PhpParser\PrettyPrinter\Standard::class);
        class_exists(\PhpParser\Token::class);
        class_exists(\Psalm\Aliases::class);
        class_exists(\Psalm\CodeLocation::class);
        class_exists(\Psalm\CodeLocation\DocblockTypeLocation::class);
        class_exists(\Psalm\CodeLocation\ParseErrorLocation::class);
        class_exists(\Psalm\CodeLocation\Raw::class);
        class_exists(\Psalm\Codebase::class);
        class_exists(\Psalm\Config::class);
        class_exists(\Psalm\Config\Creator::class);
        class_exists(\Psalm\Config\ErrorLevelFileFilter::class);
        class_exists(\Psalm\Config\FileFilter::class);
        class_exists(\Psalm\Config\IssueHandler::class);
        class_exists(\Psalm\Config\ProjectFileFilter::class);
        class_exists(\Psalm\Config\TaintAnalysisFileFilter::class);
        class_exists(\Psalm\Context::class);
        class_exists(\Psalm\DocComment::class);
        class_exists(\Psalm\ErrorBaseline::class);
        class_exists(\Psalm\Exception\CircularReferenceException::class);
        class_exists(\Psalm\Exception\CodeException::class);
        class_exists(\Psalm\Exception\ComplicatedExpressionException::class);
        class_exists(\Psalm\Exception\ConfigCreationException::class);
        class_exists(\Psalm\Exception\ConfigException::class);
        class_exists(\Psalm\Exception\ConfigNotFoundException::class);
        class_exists(\Psalm\Exception\DocblockParseException::class);
        class_exists(\Psalm\Exception\FileIncludeException::class);
        class_exists(\Psalm\Exception\IncorrectDocblockException::class);
        class_exists(\Psalm\Exception\InvalidClasslikeOverrideException::class);
        class_exists(\Psalm\Exception\InvalidMethodOverrideException::class);
        class_exists(\Psalm\Exception\RefactorException::class);
        class_exists(\Psalm\Exception\ScopeAnalysisException::class);
        class_exists(\Psalm\Exception\TypeParseTreeException::class);
        class_exists(\Psalm\Exception\UnanalyzedFileException::class);
        class_exists(\Psalm\Exception\UnpopulatedClasslikeException::class);
        class_exists(\Psalm\Exception\UnpreparedAnalysisException::class);
        class_exists(\Psalm\Exception\UnresolvableConstantException::class);
        class_exists(\Psalm\Exception\UnsupportedIssueToFixException::class);
        class_exists(\Psalm\FileBasedPluginAdapter::class);
        class_exists(\Psalm\FileManipulation::class);
        class_exists(\Psalm\FileSource::class);
        class_exists(\Psalm\Internal\Algebra::class);
        class_exists(\Psalm\Internal\Algebra\FormulaGenerator::class);
        class_exists(\Psalm\Internal\Analyzer\AlgebraAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\AttributesAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\CanAlias::class);
        class_exists(\Psalm\Internal\Analyzer\ClassAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\ClassLikeAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\ClassLikeNameOptions::class);
        class_exists(\Psalm\Internal\Analyzer\ClosureAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\CommentAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\DataFlowNodeData::class);
        class_exists(\Psalm\Internal\Analyzer\FileAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\FunctionAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\FunctionLikeAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\FunctionLike\ReturnTypeAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\FunctionLike\ReturnTypeCollector::class);
        class_exists(\Psalm\Internal\Analyzer\InterfaceAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\IssueData::class);
        class_exists(\Psalm\Internal\Analyzer\MethodAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\MethodComparator::class);
        class_exists(\Psalm\Internal\Analyzer\NamespaceAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\ProjectAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\ScopeAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\SourceAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\StatementsAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Block\DoAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Block\ForAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Block\ForeachAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Block\IfConditionalAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Block\IfElseAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Block\IfElse\ElseAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Block\IfElse\ElseIfAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Block\IfElse\IfAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Block\LoopAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Block\SwitchAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Block\SwitchCaseAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Block\TryAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Block\WhileAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\BreakAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\ContinueAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\DeclareAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\EchoAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\ExpressionAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\ArrayAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\ArrayCreationInfo::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\AssertionFinder::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\AssignmentAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Assignment\ArrayAssignmentAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Assignment\AssignedProperty::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Assignment\InstancePropertyAssignmentAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Assignment\StaticPropertyAssignmentAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\BinaryOpAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\BinaryOp\AndAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\BinaryOp\ArithmeticOpAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\BinaryOp\CoalesceAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\BinaryOp\ConcatAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\BinaryOp\NonComparisonOpAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\BinaryOp\OrAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\BitwiseNotAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\BooleanNotAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\CallAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\ArgumentAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\ArgumentMapPopulator::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\ArgumentsAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\ArrayFunctionArgumentsAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\ClassTemplateParamCollector::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\FunctionCallAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\FunctionCallInfo::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\FunctionCallReturnTypeFetcher::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\HighOrderFunctionArgHandler::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\HighOrderFunctionArgInfo::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\MethodCallAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\Method\AtomicCallContext::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\Method\AtomicMethodCallAnalysisResult::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\Method\AtomicMethodCallAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\Method\ExistingAtomicMethodCallAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\Method\MethodCallProhibitionAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\Method\MethodCallPurityAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\Method\MethodCallReturnTypeFetcher::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\Method\MethodVisibilityAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\Method\MissingMethodCallHandler::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\NamedFunctionCallHandler::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\NewAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\StaticCallAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\StaticMethod\AtomicStaticCallAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Call\StaticMethod\ExistingAtomicStaticCallAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\CastAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\ClassConstAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\CloneAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\EmptyAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\EncapsulatedStringAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\EvalAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\ExitAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\ExpressionIdentifier::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Fetch\ArrayFetchAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Fetch\AtomicPropertyFetchAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Fetch\ConstFetchAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Fetch\InstancePropertyFetchAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Fetch\StaticPropertyFetchAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\Fetch\VariableFetchAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\IncDecExpressionAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\IncludeAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\InstanceofAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\IssetAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\MagicConstAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\MatchAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\NullsafeAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\PrintAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\SimpleTypeInferer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\TernaryAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\ThrowAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\UnaryPlusMinusAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\YieldAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\Expression\YieldFromAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\GlobalAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\ReturnAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\StaticAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\UnsetAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\Statements\UnusedAssignmentRemover::class);
        class_exists(\Psalm\Internal\Analyzer\TraitAnalyzer::class);
        class_exists(\Psalm\Internal\Analyzer\TypeAnalyzer::class);
        class_exists(\Psalm\Internal\Cache::class);
        class_exists(\Psalm\Internal\Clause::class);
        class_exists(\Psalm\Internal\CliUtils::class);
        class_exists(\Psalm\Internal\Cli\LanguageServer::class);
        class_exists(\Psalm\Internal\Cli\Plugin::class);
        class_exists(\Psalm\Internal\Cli\Psalm::class);
        class_exists(\Psalm\Internal\Cli\Psalter::class);
        class_exists(\Psalm\Internal\Cli\Refactor::class);
        class_exists(\Psalm\Internal\Cli\Review::class);
        class_exists(\Psalm\Internal\Codebase\Analyzer::class);
        class_exists(\Psalm\Internal\Codebase\AssertionsFromInheritanceResolver::class);
        class_exists(\Psalm\Internal\Codebase\ClassConstantByWildcardResolver::class);
        class_exists(\Psalm\Internal\Codebase\ClassLikes::class);
        class_exists(\Psalm\Internal\Codebase\ConstantTypeResolver::class);
        class_exists(\Psalm\Internal\Codebase\DataFlowGraph::class);
        class_exists(\Psalm\Internal\Codebase\Functions::class);
        class_exists(\Psalm\Internal\Codebase\ImpureFunctionsList::class);
        class_exists(\Psalm\Internal\Codebase\InternalCallMapHandler::class);
        class_exists(\Psalm\Internal\Codebase\Methods::class);
        class_exists(\Psalm\Internal\Codebase\Populator::class);
        class_exists(\Psalm\Internal\Codebase\Properties::class);
        class_exists(\Psalm\Internal\Codebase\PropertyMap::class);
        class_exists(\Psalm\Internal\Codebase\ReferenceMapGenerator::class);
        class_exists(\Psalm\Internal\Codebase\Reflection::class);
        class_exists(\Psalm\Internal\Codebase\Scanner::class);
        class_exists(\Psalm\Internal\Codebase\StorageByPatternResolver::class);
        class_exists(\Psalm\Internal\Codebase\TaintFlowGraph::class);
        class_exists(\Psalm\Internal\Codebase\VariableUseGraph::class);
        class_exists(\Psalm\Internal\Composer::class);
        class_exists(\Psalm\Internal\DataFlow\DataFlowNode::class);
        class_exists(\Psalm\Internal\DataFlow\Path::class);
        class_exists(\Psalm\Internal\DataFlow\TaintSink::class);
        class_exists(\Psalm\Internal\DataFlow\TaintSource::class);
        class_exists(\Psalm\Internal\Diff\AstDiffer::class);
        class_exists(\Psalm\Internal\Diff\ClassStatementsDiffer::class);
        class_exists(\Psalm\Internal\Diff\DiffElem::class);
        class_exists(\Psalm\Internal\Diff\FileDiffer::class);
        class_exists(\Psalm\Internal\Diff\FileStatementsDiffer::class);
        class_exists(\Psalm\Internal\Diff\NamespaceStatementsDiffer::class);
        class_exists(\Psalm\Internal\ErrorHandler::class);
        class_exists(\Psalm\Internal\EventDispatcher::class);
        class_exists(\Psalm\Internal\ExecutionEnvironment\BuildInfoCollector::class);
        class_exists(\Psalm\Internal\ExecutionEnvironment\GitInfoCollector::class);
        class_exists(\Psalm\Internal\ExecutionEnvironment\SystemCommandExecutor::class);
        class_exists(\Psalm\Internal\FileManipulation\ClassDocblockManipulator::class);
        class_exists(\Psalm\Internal\FileManipulation\CodeMigration::class);
        class_exists(\Psalm\Internal\FileManipulation\FileManipulationBuffer::class);
        class_exists(\Psalm\Internal\FileManipulation\FunctionDocblockManipulator::class);
        class_exists(\Psalm\Internal\FileManipulation\PropertyDocblockManipulator::class);
        class_exists(\Psalm\Internal\Fork\AnalyzerTask::class);
        class_exists(\Psalm\Internal\Fork\ForkContext::class);
        class_exists(\Psalm\Internal\Fork\IgbinarySerializer::class);
        class_exists(\Psalm\Internal\Fork\InitAnalyzerTask::class);
        class_exists(\Psalm\Internal\Fork\InitScannerTask::class);
        class_exists(\Psalm\Internal\Fork\Pool::class);
        class_exists(\Psalm\Internal\Fork\PsalmRestarter::class);
        class_exists(\Psalm\Internal\Fork\ScannerTask::class);
        class_exists(\Psalm\Internal\Fork\ShutdownAnalyzerTask::class);
        class_exists(\Psalm\Internal\Fork\ShutdownScannerTask::class);
        class_exists(\Psalm\Internal\IncludeCollector::class);
        class_exists(\Psalm\Internal\Json\Json::class);
        class_exists(\Psalm\Internal\LanguageServer\ClientConfiguration::class);
        class_exists(\Psalm\Internal\LanguageServer\ClientHandler::class);
        class_exists(\Psalm\Internal\LanguageServer\Client\Progress\LegacyProgress::class);
        class_exists(\Psalm\Internal\LanguageServer\Client\Progress\Progress::class);
        class_exists(\Psalm\Internal\LanguageServer\Client\Progress\ProgressInterface::class);
        class_exists(\Psalm\Internal\LanguageServer\Client\TextDocument::class);
        class_exists(\Psalm\Internal\LanguageServer\Client\Workspace::class);
        class_exists(\Psalm\Internal\LanguageServer\EmitterInterface::class);
        class_exists(\Psalm\Internal\LanguageServer\EmitterTrait::class);
        class_exists(\Psalm\Internal\LanguageServer\IdGenerator::class);
        class_exists(\Psalm\Internal\LanguageServer\LanguageClient::class);
        class_exists(\Psalm\Internal\LanguageServer\LanguageServer::class);
        class_exists(\Psalm\Internal\LanguageServer\Message::class);
        class_exists(\Psalm\Internal\LanguageServer\PHPMarkdownContent::class);
        class_exists(\Psalm\Internal\LanguageServer\PathMapper::class);
        class_exists(\Psalm\Internal\LanguageServer\Progress::class);
        class_exists(\Psalm\Internal\LanguageServer\ProtocolReader::class);
        class_exists(\Psalm\Internal\LanguageServer\ProtocolStreamReader::class);
        class_exists(\Psalm\Internal\LanguageServer\ProtocolStreamWriter::class);
        class_exists(\Psalm\Internal\LanguageServer\ProtocolWriter::class);
        class_exists(\Psalm\Internal\LanguageServer\Provider\ClassLikeStorageCacheProvider::class);
        class_exists(\Psalm\Internal\LanguageServer\Provider\FileReferenceCacheProvider::class);
        class_exists(\Psalm\Internal\LanguageServer\Provider\FileStorageCacheProvider::class);
        class_exists(\Psalm\Internal\LanguageServer\Provider\ParserCacheProvider::class);
        class_exists(\Psalm\Internal\LanguageServer\Provider\ProjectCacheProvider::class);
        class_exists(\Psalm\Internal\LanguageServer\Reference::class);
        class_exists(\Psalm\Internal\LanguageServer\Server\TextDocument::class);
        class_exists(\Psalm\Internal\LanguageServer\Server\Workspace::class);
        class_exists(\Psalm\Internal\MethodIdentifier::class);
        class_exists(\Psalm\Internal\PhpTraverser\CustomTraverser::class);
        class_exists(\Psalm\Internal\PhpVisitor\AssignmentMapVisitor::class);
        class_exists(\Psalm\Internal\PhpVisitor\CheckTrivialExprVisitor::class);
        class_exists(\Psalm\Internal\PhpVisitor\CloningVisitor::class);
        class_exists(\Psalm\Internal\PhpVisitor\ConditionCloningVisitor::class);
        class_exists(\Psalm\Internal\PhpVisitor\NodeCleanerVisitor::class);
        class_exists(\Psalm\Internal\PhpVisitor\NodeCounterVisitor::class);
        class_exists(\Psalm\Internal\PhpVisitor\OffsetShifterVisitor::class);
        class_exists(\Psalm\Internal\PhpVisitor\ParamReplacementVisitor::class);
        class_exists(\Psalm\Internal\PhpVisitor\PartialParserVisitor::class);
        class_exists(\Psalm\Internal\PhpVisitor\ReflectorVisitor::class);
        class_exists(\Psalm\Internal\PhpVisitor\Reflector\AttributeResolver::class);
        class_exists(\Psalm\Internal\PhpVisitor\Reflector\ClassLikeDocblockParser::class);
        class_exists(\Psalm\Internal\PhpVisitor\Reflector\ClassLikeNodeScanner::class);
        class_exists(\Psalm\Internal\PhpVisitor\Reflector\ExpressionResolver::class);
        class_exists(\Psalm\Internal\PhpVisitor\Reflector\ExpressionScanner::class);
        class_exists(\Psalm\Internal\PhpVisitor\Reflector\FunctionLikeDocblockParser::class);
        class_exists(\Psalm\Internal\PhpVisitor\Reflector\FunctionLikeDocblockScanner::class);
        class_exists(\Psalm\Internal\PhpVisitor\Reflector\FunctionLikeNodeScanner::class);
        class_exists(\Psalm\Internal\PhpVisitor\Reflector\TypeHintResolver::class);
        class_exists(\Psalm\Internal\PhpVisitor\ShortClosureVisitor::class);
        class_exists(\Psalm\Internal\PhpVisitor\SimpleNameResolver::class);
        class_exists(\Psalm\Internal\PhpVisitor\TraitFinder::class);
        class_exists(\Psalm\Internal\PhpVisitor\TypeMappingVisitor::class);
        class_exists(\Psalm\Internal\PhpVisitor\YieldTypeCollector::class);
        class_exists(\Psalm\Internal\PluginManager\Command\DisableCommand::class);
        class_exists(\Psalm\Internal\PluginManager\Command\EnableCommand::class);
        class_exists(\Psalm\Internal\PluginManager\Command\ShowCommand::class);
        class_exists(\Psalm\Internal\PluginManager\ComposerLock::class);
        class_exists(\Psalm\Internal\PluginManager\ConfigFile::class);
        class_exists(\Psalm\Internal\PluginManager\PluginList::class);
        class_exists(\Psalm\Internal\PluginManager\PluginListFactory::class);
        class_exists(\Psalm\Internal\Preloader::class);
        class_exists(\Psalm\Internal\Provider\AddRemoveTaints\HtmlFunctionTainter::class);
        class_exists(\Psalm\Internal\Provider\ClassLikeStorageCacheProvider::class);
        class_exists(\Psalm\Internal\Provider\ClassLikeStorageProvider::class);
        class_exists(\Psalm\Internal\Provider\DynamicFunctionStorageProvider::class);
        class_exists(\Psalm\Internal\Provider\FakeFileProvider::class);
        class_exists(\Psalm\Internal\Provider\FileProvider::class);
        class_exists(\Psalm\Internal\Provider\FileReferenceCacheProvider::class);
        class_exists(\Psalm\Internal\Provider\FileReferenceProvider::class);
        class_exists(\Psalm\Internal\Provider\FileStorageCacheProvider::class);
        class_exists(\Psalm\Internal\Provider\FileStorageProvider::class);
        class_exists(\Psalm\Internal\Provider\FunctionExistenceProvider::class);
        class_exists(\Psalm\Internal\Provider\FunctionParamsProvider::class);
        class_exists(\Psalm\Internal\Provider\FunctionReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\MethodExistenceProvider::class);
        class_exists(\Psalm\Internal\Provider\MethodParamsProvider::class);
        class_exists(\Psalm\Internal\Provider\MethodReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\MethodVisibilityProvider::class);
        class_exists(\Psalm\Internal\Provider\NodeDataProvider::class);
        class_exists(\Psalm\Internal\Provider\ParamsProvider\ArrayFilterParamsProvider::class);
        class_exists(\Psalm\Internal\Provider\ParamsProvider\ArrayMultisortParamsProvider::class);
        class_exists(\Psalm\Internal\Provider\ParamsProvider\ArrayUArrayParamsProvider::class);
        class_exists(\Psalm\Internal\Provider\ParserCacheProvider::class);
        class_exists(\Psalm\Internal\Provider\ProjectCacheProvider::class);
        class_exists(\Psalm\Internal\Provider\PropertyExistenceProvider::class);
        class_exists(\Psalm\Internal\Provider\PropertyTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\PropertyTypeProvider\DomDocumentPropertyTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\PropertyVisibilityProvider::class);
        class_exists(\Psalm\Internal\Provider\Providers::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ArrayChunkReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ArrayColumnReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ArrayCombineReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ArrayFillKeysReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ArrayFillReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ArrayFilterReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ArrayMapReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ArrayMergeReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ArrayPadReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ArrayPointerAdjustmentReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ArrayPopReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ArrayRandReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ArrayReduceReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ArrayReverseReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ArraySliceReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ArraySpliceReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\BasenameReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ClosureFromCallableReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\DateReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\DateTimeModifyReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\DirnameReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\DomNodeAppendChild::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\FilterInputReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\FilterUtils::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\FilterVarReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\FirstArgStringReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\GetClassMethodsReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\GetObjectVarsReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\HexdecReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ImagickPixelColorReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\InArrayReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\IteratorToArrayReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\MbInternalEncodingReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\MinMaxReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\MktimeReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\ParseUrlReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\PdoStatementReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\PdoStatementSetFetchMode::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\PowReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\RandReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\RoundReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\SprintfReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\StrReplaceReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\StrTrReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\TriggerErrorReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\ReturnTypeProvider\VersionCompareReturnTypeProvider::class);
        class_exists(\Psalm\Internal\Provider\StatementsProvider::class);
        class_exists(\Psalm\Internal\ReferenceConstraint::class);
        class_exists(\Psalm\Internal\RuntimeCaches::class);
        class_exists(\Psalm\Internal\Scanner\ClassLikeDocblockComment::class);
        class_exists(\Psalm\Internal\Scanner\DocblockParser::class);
        class_exists(\Psalm\Internal\Scanner\FileScanner::class);
        class_exists(\Psalm\Internal\Scanner\FunctionDocblockComment::class);
        class_exists(\Psalm\Internal\Scanner\ParsedDocblock::class);
        class_exists(\Psalm\Internal\Scanner\PhpStormMetaScanner::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstantComponent::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\ArrayOffsetFetch::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\ArraySpread::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\ArrayValue::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\ClassConstant::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\Constant::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\EnumNameFetch::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\EnumPropertyFetch::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\EnumValueFetch::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\KeyValuePair::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\ScalarValue::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\UnresolvedAdditionOp::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\UnresolvedBinaryOp::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\UnresolvedBitwiseAnd::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\UnresolvedBitwiseOr::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\UnresolvedBitwiseXor::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\UnresolvedConcatOp::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\UnresolvedDivisionOp::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\UnresolvedMultiplicationOp::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\UnresolvedSubtractionOp::class);
        class_exists(\Psalm\Internal\Scanner\UnresolvedConstant\UnresolvedTernary::class);
        class_exists(\Psalm\Internal\Scanner\VarDocblockComment::class);
        class_exists(\Psalm\Internal\Scope\CaseScope::class);
        class_exists(\Psalm\Internal\Scope\FinallyScope::class);
        class_exists(\Psalm\Internal\Scope\IfConditionalScope::class);
        class_exists(\Psalm\Internal\Scope\IfScope::class);
        class_exists(\Psalm\Internal\Scope\LoopScope::class);
        class_exists(\Psalm\Internal\Scope\SwitchScope::class);
        class_exists(\Psalm\Internal\Stubs\Generator\ClassLikeStubGenerator::class);
        class_exists(\Psalm\Internal\Stubs\Generator\StubsGenerator::class);
        class_exists(\Psalm\Internal\TypeVisitor\CanContainObjectTypeVisitor::class);
        class_exists(\Psalm\Internal\TypeVisitor\ClasslikeReplacer::class);
        class_exists(\Psalm\Internal\TypeVisitor\ContainsClassLikeVisitor::class);
        class_exists(\Psalm\Internal\TypeVisitor\ContainsLiteralVisitor::class);
        class_exists(\Psalm\Internal\TypeVisitor\ContainsStaticVisitor::class);
        class_exists(\Psalm\Internal\TypeVisitor\FromDocblockSetter::class);
        class_exists(\Psalm\Internal\TypeVisitor\TemplateTypeCollector::class);
        class_exists(\Psalm\Internal\TypeVisitor\TypeChecker::class);
        class_exists(\Psalm\Internal\TypeVisitor\TypeLocalizer::class);
        class_exists(\Psalm\Internal\TypeVisitor\TypeScanner::class);
        class_exists(\Psalm\Internal\Type\ArrayType::class);
        class_exists(\Psalm\Internal\Type\AssertionReconciler::class);
        class_exists(\Psalm\Internal\Type\ClosedInheritanceToUnion::class);
        class_exists(\Psalm\Internal\Type\Comparator\ArrayTypeComparator::class);
        class_exists(\Psalm\Internal\Type\Comparator\AtomicTypeComparator::class);
        class_exists(\Psalm\Internal\Type\Comparator\CallableTypeComparator::class);
        class_exists(\Psalm\Internal\Type\Comparator\ClassLikeStringComparator::class);
        class_exists(\Psalm\Internal\Type\Comparator\GenericTypeComparator::class);
        class_exists(\Psalm\Internal\Type\Comparator\IntegerRangeComparator::class);
        class_exists(\Psalm\Internal\Type\Comparator\KeyedArrayComparator::class);
        class_exists(\Psalm\Internal\Type\Comparator\ObjectComparator::class);
        class_exists(\Psalm\Internal\Type\Comparator\ScalarTypeComparator::class);
        class_exists(\Psalm\Internal\Type\Comparator\TypeComparisonResult::class);
        class_exists(\Psalm\Internal\Type\Comparator\UnionTypeComparator::class);
        class_exists(\Psalm\Internal\Type\NegatedAssertionReconciler::class);
        class_exists(\Psalm\Internal\Type\ParseTree::class);
        class_exists(\Psalm\Internal\Type\ParseTreeCreator::class);
        class_exists(\Psalm\Internal\Type\ParseTree\CallableParamTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\CallableTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\CallableWithReturnTypeTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\ConditionalTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\EncapsulationTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\FieldEllipsis::class);
        class_exists(\Psalm\Internal\Type\ParseTree\GenericTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\IndexedAccessTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\IntersectionTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\KeyedArrayPropertyTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\KeyedArrayTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\MethodParamTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\MethodTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\MethodWithReturnTypeTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\NullableTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\Root::class);
        class_exists(\Psalm\Internal\Type\ParseTree\TemplateAsTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\TemplateIsTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\UnionTree::class);
        class_exists(\Psalm\Internal\Type\ParseTree\Value::class);
        class_exists(\Psalm\Internal\Type\SimpleAssertionReconciler::class);
        class_exists(\Psalm\Internal\Type\SimpleNegatedAssertionReconciler::class);
        class_exists(\Psalm\Internal\Type\TemplateBound::class);
        class_exists(\Psalm\Internal\Type\TemplateInferredTypeReplacer::class);
        class_exists(\Psalm\Internal\Type\TemplateResult::class);
        class_exists(\Psalm\Internal\Type\TemplateStandinTypeReplacer::class);
        class_exists(\Psalm\Internal\Type\TypeAlias::class);
        class_exists(\Psalm\Internal\Type\TypeAlias\ClassTypeAlias::class);
        class_exists(\Psalm\Internal\Type\TypeAlias\InlineTypeAlias::class);
        class_exists(\Psalm\Internal\Type\TypeAlias\LinkableTypeAlias::class);
        class_exists(\Psalm\Internal\Type\TypeCombination::class);
        class_exists(\Psalm\Internal\Type\TypeCombiner::class);
        class_exists(\Psalm\Internal\Type\TypeExpander::class);
        class_exists(\Psalm\Internal\Type\TypeParser::class);
        class_exists(\Psalm\Internal\Type\TypeTokenizer::class);
        class_exists(\Psalm\Internal\VersionUtils::class);
        class_exists(\Psalm\IssueBuffer::class);
        class_exists(\Psalm\Issue\AbstractInstantiation::class);
        class_exists(\Psalm\Issue\AbstractMethodCall::class);
        class_exists(\Psalm\Issue\AmbiguousConstantInheritance::class);
        class_exists(\Psalm\Issue\ArgumentIssue::class);
        class_exists(\Psalm\Issue\ArgumentTypeCoercion::class);
        class_exists(\Psalm\Issue\AssignmentToVoid::class);
        class_exists(\Psalm\Issue\CheckType::class);
        class_exists(\Psalm\Issue\CircularReference::class);
        class_exists(\Psalm\Issue\ClassConstantIssue::class);
        class_exists(\Psalm\Issue\ClassIssue::class);
        class_exists(\Psalm\Issue\ClassMustBeFinal::class);
        class_exists(\Psalm\Issue\CodeIssue::class);
        class_exists(\Psalm\Issue\ComplexFunction::class);
        class_exists(\Psalm\Issue\ComplexMethod::class);
        class_exists(\Psalm\Issue\ConfigIssue::class);
        class_exists(\Psalm\Issue\ConflictingReferenceConstraint::class);
        class_exists(\Psalm\Issue\ConstantDeclarationInTrait::class);
        class_exists(\Psalm\Issue\ConstructorSignatureMismatch::class);
        class_exists(\Psalm\Issue\ContinueOutsideLoop::class);
        class_exists(\Psalm\Issue\DeprecatedClass::class);
        class_exists(\Psalm\Issue\DeprecatedConstant::class);
        class_exists(\Psalm\Issue\DeprecatedFunction::class);
        class_exists(\Psalm\Issue\DeprecatedInterface::class);
        class_exists(\Psalm\Issue\DeprecatedMethod::class);
        class_exists(\Psalm\Issue\DeprecatedProperty::class);
        class_exists(\Psalm\Issue\DeprecatedTrait::class);
        class_exists(\Psalm\Issue\DirectConstructorCall::class);
        class_exists(\Psalm\Issue\DocblockTypeContradiction::class);
        class_exists(\Psalm\Issue\DuplicateArrayKey::class);
        class_exists(\Psalm\Issue\DuplicateClass::class);
        class_exists(\Psalm\Issue\DuplicateConstant::class);
        class_exists(\Psalm\Issue\DuplicateEnumCase::class);
        class_exists(\Psalm\Issue\DuplicateEnumCaseValue::class);
        class_exists(\Psalm\Issue\DuplicateFunction::class);
        class_exists(\Psalm\Issue\DuplicateMethod::class);
        class_exists(\Psalm\Issue\DuplicateParam::class);
        class_exists(\Psalm\Issue\DuplicateProperty::class);
        class_exists(\Psalm\Issue\EmptyArrayAccess::class);
        class_exists(\Psalm\Issue\ExtensionRequirementViolation::class);
        class_exists(\Psalm\Issue\FalsableReturnStatement::class);
        class_exists(\Psalm\Issue\FalseOperand::class);
        class_exists(\Psalm\Issue\ForbiddenCode::class);
        class_exists(\Psalm\Issue\FunctionIssue::class);
        class_exists(\Psalm\Issue\IfThisIsMismatch::class);
        class_exists(\Psalm\Issue\ImplementationRequirementViolation::class);
        class_exists(\Psalm\Issue\ImplementedParamTypeMismatch::class);
        class_exists(\Psalm\Issue\ImplementedReturnTypeMismatch::class);
        class_exists(\Psalm\Issue\ImplicitToStringCast::class);
        class_exists(\Psalm\Issue\ImpureByReferenceAssignment::class);
        class_exists(\Psalm\Issue\ImpureFunctionCall::class);
        class_exists(\Psalm\Issue\ImpureMethodCall::class);
        class_exists(\Psalm\Issue\ImpurePropertyAssignment::class);
        class_exists(\Psalm\Issue\ImpurePropertyFetch::class);
        class_exists(\Psalm\Issue\ImpureStaticProperty::class);
        class_exists(\Psalm\Issue\ImpureStaticVariable::class);
        class_exists(\Psalm\Issue\ImpureVariable::class);
        class_exists(\Psalm\Issue\InaccessibleClassConstant::class);
        class_exists(\Psalm\Issue\InaccessibleMethod::class);
        class_exists(\Psalm\Issue\InaccessibleProperty::class);
        class_exists(\Psalm\Issue\InheritorViolation::class);
        class_exists(\Psalm\Issue\InterfaceInstantiation::class);
        class_exists(\Psalm\Issue\InternalClass::class);
        class_exists(\Psalm\Issue\InternalMethod::class);
        class_exists(\Psalm\Issue\InternalProperty::class);
        class_exists(\Psalm\Issue\InvalidArgument::class);
        class_exists(\Psalm\Issue\InvalidArrayAccess::class);
        class_exists(\Psalm\Issue\InvalidArrayAssignment::class);
        class_exists(\Psalm\Issue\InvalidArrayOffset::class);
        class_exists(\Psalm\Issue\InvalidAttribute::class);
        class_exists(\Psalm\Issue\InvalidCast::class);
        class_exists(\Psalm\Issue\InvalidCatch::class);
        class_exists(\Psalm\Issue\InvalidClass::class);
        class_exists(\Psalm\Issue\InvalidClassConstantType::class);
        class_exists(\Psalm\Issue\InvalidClone::class);
        class_exists(\Psalm\Issue\InvalidConstantAssignmentValue::class);
        class_exists(\Psalm\Issue\InvalidDocblock::class);
        class_exists(\Psalm\Issue\InvalidDocblockParamName::class);
        class_exists(\Psalm\Issue\InvalidEnumBackingType::class);
        class_exists(\Psalm\Issue\InvalidEnumCaseValue::class);
        class_exists(\Psalm\Issue\InvalidEnumMethod::class);
        class_exists(\Psalm\Issue\InvalidExtendClass::class);
        class_exists(\Psalm\Issue\InvalidFalsableReturnType::class);
        class_exists(\Psalm\Issue\InvalidFunctionCall::class);
        class_exists(\Psalm\Issue\InvalidGlobal::class);
        class_exists(\Psalm\Issue\InvalidInterfaceImplementation::class);
        class_exists(\Psalm\Issue\InvalidIterator::class);
        class_exists(\Psalm\Issue\InvalidLiteralArgument::class);
        class_exists(\Psalm\Issue\InvalidMethodCall::class);
        class_exists(\Psalm\Issue\InvalidNamedArgument::class);
        class_exists(\Psalm\Issue\InvalidNullableReturnType::class);
        class_exists(\Psalm\Issue\InvalidOperand::class);
        class_exists(\Psalm\Issue\InvalidOverride::class);
        class_exists(\Psalm\Issue\InvalidParamDefault::class);
        class_exists(\Psalm\Issue\InvalidParent::class);
        class_exists(\Psalm\Issue\InvalidPassByReference::class);
        class_exists(\Psalm\Issue\InvalidPropertyAssignment::class);
        class_exists(\Psalm\Issue\InvalidPropertyAssignmentValue::class);
        class_exists(\Psalm\Issue\InvalidPropertyFetch::class);
        class_exists(\Psalm\Issue\InvalidReturnStatement::class);
        class_exists(\Psalm\Issue\InvalidReturnType::class);
        class_exists(\Psalm\Issue\InvalidScalarArgument::class);
        class_exists(\Psalm\Issue\InvalidScope::class);
        class_exists(\Psalm\Issue\InvalidStaticInvocation::class);
        class_exists(\Psalm\Issue\InvalidStringClass::class);
        class_exists(\Psalm\Issue\InvalidTemplateParam::class);
        class_exists(\Psalm\Issue\InvalidThrow::class);
        class_exists(\Psalm\Issue\InvalidToString::class);
        class_exists(\Psalm\Issue\InvalidTraversableImplementation::class);
        class_exists(\Psalm\Issue\InvalidTypeImport::class);
        class_exists(\Psalm\Issue\LessSpecificClassConstantType::class);
        class_exists(\Psalm\Issue\LessSpecificImplementedReturnType::class);
        class_exists(\Psalm\Issue\LessSpecificReturnStatement::class);
        class_exists(\Psalm\Issue\LessSpecificReturnType::class);
        class_exists(\Psalm\Issue\LiteralKeyUnshapedArray::class);
        class_exists(\Psalm\Issue\LoopInvalidation::class);
        class_exists(\Psalm\Issue\MethodIssue::class);
        class_exists(\Psalm\Issue\MethodSignatureMismatch::class);
        class_exists(\Psalm\Issue\MethodSignatureMustOmitReturnType::class);
        class_exists(\Psalm\Issue\MethodSignatureMustProvideReturnType::class);
        class_exists(\Psalm\Issue\MismatchingDocblockParamType::class);
        class_exists(\Psalm\Issue\MismatchingDocblockPropertyType::class);
        class_exists(\Psalm\Issue\MismatchingDocblockReturnType::class);
        class_exists(\Psalm\Issue\MissingClassConstType::class);
        class_exists(\Psalm\Issue\MissingClosureParamType::class);
        class_exists(\Psalm\Issue\MissingClosureReturnType::class);
        class_exists(\Psalm\Issue\MissingConstructor::class);
        class_exists(\Psalm\Issue\MissingDependency::class);
        class_exists(\Psalm\Issue\MissingDocblockType::class);
        class_exists(\Psalm\Issue\MissingFile::class);
        class_exists(\Psalm\Issue\MissingImmutableAnnotation::class);
        class_exists(\Psalm\Issue\MissingOverrideAttribute::class);
        class_exists(\Psalm\Issue\MissingParamType::class);
        class_exists(\Psalm\Issue\MissingPropertyType::class);
        class_exists(\Psalm\Issue\MissingReturnType::class);
        class_exists(\Psalm\Issue\MissingTemplateParam::class);
        class_exists(\Psalm\Issue\MissingThrowsDocblock::class);
        class_exists(\Psalm\Issue\MixedArgument::class);
        class_exists(\Psalm\Issue\MixedArgumentTypeCoercion::class);
        class_exists(\Psalm\Issue\MixedArrayAccess::class);
        class_exists(\Psalm\Issue\MixedArrayAssignment::class);
        class_exists(\Psalm\Issue\MixedArrayOffset::class);
        class_exists(\Psalm\Issue\MixedArrayTypeCoercion::class);
        class_exists(\Psalm\Issue\MixedAssignment::class);
        class_exists(\Psalm\Issue\MixedClone::class);
        class_exists(\Psalm\Issue\MixedFunctionCall::class);
        class_exists(\Psalm\Issue\MixedIssue::class);
        class_exists(\Psalm\Issue\MixedIssueTrait::class);
        class_exists(\Psalm\Issue\MixedMethodCall::class);
        class_exists(\Psalm\Issue\MixedOperand::class);
        class_exists(\Psalm\Issue\MixedPropertyAssignment::class);
        class_exists(\Psalm\Issue\MixedPropertyFetch::class);
        class_exists(\Psalm\Issue\MixedPropertyTypeCoercion::class);
        class_exists(\Psalm\Issue\MixedReturnStatement::class);
        class_exists(\Psalm\Issue\MixedReturnTypeCoercion::class);
        class_exists(\Psalm\Issue\MixedStringOffsetAssignment::class);
        class_exists(\Psalm\Issue\MoreSpecificImplementedParamType::class);
        class_exists(\Psalm\Issue\MoreSpecificReturnType::class);
        class_exists(\Psalm\Issue\MutableDependency::class);
        class_exists(\Psalm\Issue\NamedArgumentNotAllowed::class);
        class_exists(\Psalm\Issue\NoEnumProperties::class);
        class_exists(\Psalm\Issue\NoInterfaceProperties::class);
        class_exists(\Psalm\Issue\NoValue::class);
        class_exists(\Psalm\Issue\NonInvariantDocblockPropertyType::class);
        class_exists(\Psalm\Issue\NonInvariantPropertyType::class);
        class_exists(\Psalm\Issue\NonStaticSelfCall::class);
        class_exists(\Psalm\Issue\NonVariableReferenceReturn::class);
        class_exists(\Psalm\Issue\NullArgument::class);
        class_exists(\Psalm\Issue\NullArrayAccess::class);
        class_exists(\Psalm\Issue\NullArrayOffset::class);
        class_exists(\Psalm\Issue\NullFunctionCall::class);
        class_exists(\Psalm\Issue\NullIterator::class);
        class_exists(\Psalm\Issue\NullOperand::class);
        class_exists(\Psalm\Issue\NullPropertyAssignment::class);
        class_exists(\Psalm\Issue\NullPropertyFetch::class);
        class_exists(\Psalm\Issue\NullReference::class);
        class_exists(\Psalm\Issue\NullableReturnStatement::class);
        class_exists(\Psalm\Issue\OverriddenFinalConstant::class);
        class_exists(\Psalm\Issue\OverriddenInterfaceConstant::class);
        class_exists(\Psalm\Issue\OverriddenMethodAccess::class);
        class_exists(\Psalm\Issue\OverriddenPropertyAccess::class);
        class_exists(\Psalm\Issue\ParadoxicalCondition::class);
        class_exists(\Psalm\Issue\ParamNameMismatch::class);
        class_exists(\Psalm\Issue\ParentNotFound::class);
        class_exists(\Psalm\Issue\ParseError::class);
        class_exists(\Psalm\Issue\PluginIssue::class);
        class_exists(\Psalm\Issue\PossibleRawObjectIteration::class);
        class_exists(\Psalm\Issue\PossiblyFalseArgument::class);
        class_exists(\Psalm\Issue\PossiblyFalseIterator::class);
        class_exists(\Psalm\Issue\PossiblyFalseOperand::class);
        class_exists(\Psalm\Issue\PossiblyFalsePropertyAssignmentValue::class);
        class_exists(\Psalm\Issue\PossiblyFalseReference::class);
        class_exists(\Psalm\Issue\PossiblyInvalidArgument::class);
        class_exists(\Psalm\Issue\PossiblyInvalidArrayAccess::class);
        class_exists(\Psalm\Issue\PossiblyInvalidArrayAssignment::class);
        class_exists(\Psalm\Issue\PossiblyInvalidArrayOffset::class);
        class_exists(\Psalm\Issue\PossiblyInvalidCast::class);
        class_exists(\Psalm\Issue\PossiblyInvalidClone::class);
        class_exists(\Psalm\Issue\PossiblyInvalidDocblockTag::class);
        class_exists(\Psalm\Issue\PossiblyInvalidFunctionCall::class);
        class_exists(\Psalm\Issue\PossiblyInvalidIterator::class);
        class_exists(\Psalm\Issue\PossiblyInvalidMethodCall::class);
        class_exists(\Psalm\Issue\PossiblyInvalidOperand::class);
        class_exists(\Psalm\Issue\PossiblyInvalidPropertyAssignment::class);
        class_exists(\Psalm\Issue\PossiblyInvalidPropertyAssignmentValue::class);
        class_exists(\Psalm\Issue\PossiblyInvalidPropertyFetch::class);
        class_exists(\Psalm\Issue\PossiblyNullArgument::class);
        class_exists(\Psalm\Issue\PossiblyNullArrayAccess::class);
        class_exists(\Psalm\Issue\PossiblyNullArrayAssignment::class);
        class_exists(\Psalm\Issue\PossiblyNullArrayOffset::class);
        class_exists(\Psalm\Issue\PossiblyNullFunctionCall::class);
        class_exists(\Psalm\Issue\PossiblyNullIterator::class);
        class_exists(\Psalm\Issue\PossiblyNullOperand::class);
        class_exists(\Psalm\Issue\PossiblyNullPropertyAssignment::class);
        class_exists(\Psalm\Issue\PossiblyNullPropertyAssignmentValue::class);
        class_exists(\Psalm\Issue\PossiblyNullPropertyFetch::class);
        class_exists(\Psalm\Issue\PossiblyNullReference::class);
        class_exists(\Psalm\Issue\PossiblyUndefinedArrayOffset::class);
        class_exists(\Psalm\Issue\PossiblyUndefinedGlobalVariable::class);
        class_exists(\Psalm\Issue\PossiblyUndefinedIntArrayOffset::class);
        class_exists(\Psalm\Issue\PossiblyUndefinedMethod::class);
        class_exists(\Psalm\Issue\PossiblyUndefinedStringArrayOffset::class);
        class_exists(\Psalm\Issue\PossiblyUndefinedVariable::class);
        class_exists(\Psalm\Issue\PossiblyUnusedMethod::class);
        class_exists(\Psalm\Issue\PossiblyUnusedParam::class);
        class_exists(\Psalm\Issue\PossiblyUnusedProperty::class);
        class_exists(\Psalm\Issue\PossiblyUnusedReturnValue::class);
        class_exists(\Psalm\Issue\PrivateFinalMethod::class);
        class_exists(\Psalm\Issue\PropertyIssue::class);
        class_exists(\Psalm\Issue\PropertyNotSetInConstructor::class);
        class_exists(\Psalm\Issue\PropertyTypeCoercion::class);
        class_exists(\Psalm\Issue\PsalmInternalError::class);
        class_exists(\Psalm\Issue\RawObjectIteration::class);
        class_exists(\Psalm\Issue\RedundantCast::class);
        class_exists(\Psalm\Issue\RedundantCastGivenDocblockType::class);
        class_exists(\Psalm\Issue\RedundantCondition::class);
        class_exists(\Psalm\Issue\RedundantConditionGivenDocblockType::class);
        class_exists(\Psalm\Issue\RedundantFlag::class);
        class_exists(\Psalm\Issue\RedundantFunctionCall::class);
        class_exists(\Psalm\Issue\RedundantFunctionCallGivenDocblockType::class);
        class_exists(\Psalm\Issue\RedundantIdentityWithTrue::class);
        class_exists(\Psalm\Issue\RedundantPropertyInitializationCheck::class);
        class_exists(\Psalm\Issue\ReferenceConstraintViolation::class);
        class_exists(\Psalm\Issue\ReferenceReusedFromConfusingScope::class);
        class_exists(\Psalm\Issue\ReservedWord::class);
        class_exists(\Psalm\Issue\RiskyCast::class);
        class_exists(\Psalm\Issue\RiskyTruthyFalsyComparison::class);
        class_exists(\Psalm\Issue\StringIncrement::class);
        class_exists(\Psalm\Issue\TaintedCallable::class);
        class_exists(\Psalm\Issue\TaintedCookie::class);
        class_exists(\Psalm\Issue\TaintedCustom::class);
        class_exists(\Psalm\Issue\TaintedEval::class);
        class_exists(\Psalm\Issue\TaintedExtract::class);
        class_exists(\Psalm\Issue\TaintedFile::class);
        class_exists(\Psalm\Issue\TaintedHeader::class);
        class_exists(\Psalm\Issue\TaintedHtml::class);
        class_exists(\Psalm\Issue\TaintedInclude::class);
        class_exists(\Psalm\Issue\TaintedInput::class);
        class_exists(\Psalm\Issue\TaintedLdap::class);
        class_exists(\Psalm\Issue\TaintedSSRF::class);
        class_exists(\Psalm\Issue\TaintedShell::class);
        class_exists(\Psalm\Issue\TaintedSleep::class);
        class_exists(\Psalm\Issue\TaintedSql::class);
        class_exists(\Psalm\Issue\TaintedSystemSecret::class);
        class_exists(\Psalm\Issue\TaintedTextWithQuotes::class);
        class_exists(\Psalm\Issue\TaintedUnserialize::class);
        class_exists(\Psalm\Issue\TaintedUserSecret::class);
        class_exists(\Psalm\Issue\TaintedXpath::class);
        class_exists(\Psalm\Issue\TooFewArguments::class);
        class_exists(\Psalm\Issue\TooManyArguments::class);
        class_exists(\Psalm\Issue\TooManyTemplateParams::class);
        class_exists(\Psalm\Issue\Trace::class);
        class_exists(\Psalm\Issue\TraitMethodSignatureMismatch::class);
        class_exists(\Psalm\Issue\TypeDoesNotContainNull::class);
        class_exists(\Psalm\Issue\TypeDoesNotContainType::class);
        class_exists(\Psalm\Issue\UncaughtThrowInGlobalScope::class);
        class_exists(\Psalm\Issue\UndefinedAttributeClass::class);
        class_exists(\Psalm\Issue\UndefinedClass::class);
        class_exists(\Psalm\Issue\UndefinedConstant::class);
        class_exists(\Psalm\Issue\UndefinedDocblockClass::class);
        class_exists(\Psalm\Issue\UndefinedFunction::class);
        class_exists(\Psalm\Issue\UndefinedGlobalVariable::class);
        class_exists(\Psalm\Issue\UndefinedInterface::class);
        class_exists(\Psalm\Issue\UndefinedInterfaceMethod::class);
        class_exists(\Psalm\Issue\UndefinedMagicMethod::class);
        class_exists(\Psalm\Issue\UndefinedMagicPropertyAssignment::class);
        class_exists(\Psalm\Issue\UndefinedMagicPropertyFetch::class);
        class_exists(\Psalm\Issue\UndefinedMethod::class);
        class_exists(\Psalm\Issue\UndefinedPropertyAssignment::class);
        class_exists(\Psalm\Issue\UndefinedPropertyFetch::class);
        class_exists(\Psalm\Issue\UndefinedThisPropertyAssignment::class);
        class_exists(\Psalm\Issue\UndefinedThisPropertyFetch::class);
        class_exists(\Psalm\Issue\UndefinedTrace::class);
        class_exists(\Psalm\Issue\UndefinedTrait::class);
        class_exists(\Psalm\Issue\UndefinedVariable::class);
        class_exists(\Psalm\Issue\UnevaluatedCode::class);
        class_exists(\Psalm\Issue\UnhandledMatchCondition::class);
        class_exists(\Psalm\Issue\UnimplementedAbstractMethod::class);
        class_exists(\Psalm\Issue\UnimplementedInterfaceMethod::class);
        class_exists(\Psalm\Issue\UninitializedProperty::class);
        class_exists(\Psalm\Issue\UnnecessaryVarAnnotation::class);
        class_exists(\Psalm\Issue\UnrecognizedExpression::class);
        class_exists(\Psalm\Issue\UnrecognizedStatement::class);
        class_exists(\Psalm\Issue\UnresolvableConstant::class);
        class_exists(\Psalm\Issue\UnresolvableInclude::class);
        class_exists(\Psalm\Issue\UnsafeGenericInstantiation::class);
        class_exists(\Psalm\Issue\UnsafeInstantiation::class);
        class_exists(\Psalm\Issue\UnsupportedPropertyReferenceUsage::class);
        class_exists(\Psalm\Issue\UnsupportedReferenceUsage::class);
        class_exists(\Psalm\Issue\UnusedBaselineEntry::class);
        class_exists(\Psalm\Issue\UnusedClass::class);
        class_exists(\Psalm\Issue\UnusedClosureParam::class);
        class_exists(\Psalm\Issue\UnusedConstructor::class);
        class_exists(\Psalm\Issue\UnusedDocblockParam::class);
        class_exists(\Psalm\Issue\UnusedForeachValue::class);
        class_exists(\Psalm\Issue\UnusedFunctionCall::class);
        class_exists(\Psalm\Issue\UnusedIssueHandlerSuppression::class);
        class_exists(\Psalm\Issue\UnusedMethod::class);
        class_exists(\Psalm\Issue\UnusedMethodCall::class);
        class_exists(\Psalm\Issue\UnusedParam::class);
        class_exists(\Psalm\Issue\UnusedProperty::class);
        class_exists(\Psalm\Issue\UnusedPsalmSuppress::class);
        class_exists(\Psalm\Issue\UnusedReturnValue::class);
        class_exists(\Psalm\Issue\UnusedVariable::class);
        class_exists(\Psalm\Issue\VariableIssue::class);
        class_exists(\Psalm\NodeTypeProvider::class);
        class_exists(\Psalm\Node\Expr\AssignOp\VirtualBitwiseAnd::class);
        class_exists(\Psalm\Node\Expr\AssignOp\VirtualBitwiseOr::class);
        class_exists(\Psalm\Node\Expr\AssignOp\VirtualBitwiseXor::class);
        class_exists(\Psalm\Node\Expr\AssignOp\VirtualCoalesce::class);
        class_exists(\Psalm\Node\Expr\AssignOp\VirtualConcat::class);
        class_exists(\Psalm\Node\Expr\AssignOp\VirtualDiv::class);
        class_exists(\Psalm\Node\Expr\AssignOp\VirtualMinus::class);
        class_exists(\Psalm\Node\Expr\AssignOp\VirtualMod::class);
        class_exists(\Psalm\Node\Expr\AssignOp\VirtualMul::class);
        class_exists(\Psalm\Node\Expr\AssignOp\VirtualPlus::class);
        class_exists(\Psalm\Node\Expr\AssignOp\VirtualPow::class);
        class_exists(\Psalm\Node\Expr\AssignOp\VirtualShiftLeft::class);
        class_exists(\Psalm\Node\Expr\AssignOp\VirtualShiftRight::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualBitwiseAnd::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualBitwiseOr::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualBitwiseXor::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualBooleanAnd::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualBooleanOr::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualCoalesce::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualConcat::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualDiv::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualEqual::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualGreater::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualGreaterOrEqual::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualIdentical::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualLogicalAnd::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualLogicalOr::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualLogicalXor::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualMinus::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualMod::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualMul::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualNotEqual::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualNotIdentical::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualPlus::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualPow::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualShiftLeft::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualShiftRight::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualSmaller::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualSmallerOrEqual::class);
        class_exists(\Psalm\Node\Expr\BinaryOp\VirtualSpaceship::class);
        class_exists(\Psalm\Node\Expr\Cast\VirtualArray::class);
        class_exists(\Psalm\Node\Expr\Cast\VirtualBool::class);
        class_exists(\Psalm\Node\Expr\Cast\VirtualDouble::class);
        class_exists(\Psalm\Node\Expr\Cast\VirtualInt::class);
        class_exists(\Psalm\Node\Expr\Cast\VirtualObject::class);
        class_exists(\Psalm\Node\Expr\Cast\VirtualString::class);
        class_exists(\Psalm\Node\Expr\Cast\VirtualUnset::class);
        class_exists(\Psalm\Node\Expr\VirtualArray::class);
        class_exists(\Psalm\Node\Expr\VirtualArrayDimFetch::class);
        class_exists(\Psalm\Node\Expr\VirtualArrowFunction::class);
        class_exists(\Psalm\Node\Expr\VirtualAssign::class);
        class_exists(\Psalm\Node\Expr\VirtualAssignRef::class);
        class_exists(\Psalm\Node\Expr\VirtualBitwiseNot::class);
        class_exists(\Psalm\Node\Expr\VirtualBooleanNot::class);
        class_exists(\Psalm\Node\Expr\VirtualClassConstFetch::class);
        class_exists(\Psalm\Node\Expr\VirtualClone::class);
        class_exists(\Psalm\Node\Expr\VirtualClosure::class);
        class_exists(\Psalm\Node\Expr\VirtualConstFetch::class);
        class_exists(\Psalm\Node\Expr\VirtualEmpty::class);
        class_exists(\Psalm\Node\Expr\VirtualError::class);
        class_exists(\Psalm\Node\Expr\VirtualErrorSuppress::class);
        class_exists(\Psalm\Node\Expr\VirtualEval::class);
        class_exists(\Psalm\Node\Expr\VirtualExit::class);
        class_exists(\Psalm\Node\Expr\VirtualFuncCall::class);
        class_exists(\Psalm\Node\Expr\VirtualInclude::class);
        class_exists(\Psalm\Node\Expr\VirtualInstanceof::class);
        class_exists(\Psalm\Node\Expr\VirtualIsset::class);
        class_exists(\Psalm\Node\Expr\VirtualList::class);
        class_exists(\Psalm\Node\Expr\VirtualMatch::class);
        class_exists(\Psalm\Node\Expr\VirtualMethodCall::class);
        class_exists(\Psalm\Node\Expr\VirtualNew::class);
        class_exists(\Psalm\Node\Expr\VirtualNullsafeMethodCall::class);
        class_exists(\Psalm\Node\Expr\VirtualNullsafePropertyFetch::class);
        class_exists(\Psalm\Node\Expr\VirtualPostDec::class);
        class_exists(\Psalm\Node\Expr\VirtualPostInc::class);
        class_exists(\Psalm\Node\Expr\VirtualPreDec::class);
        class_exists(\Psalm\Node\Expr\VirtualPreInc::class);
        class_exists(\Psalm\Node\Expr\VirtualPrint::class);
        class_exists(\Psalm\Node\Expr\VirtualPropertyFetch::class);
        class_exists(\Psalm\Node\Expr\VirtualShellExec::class);
        class_exists(\Psalm\Node\Expr\VirtualStaticCall::class);
        class_exists(\Psalm\Node\Expr\VirtualStaticPropertyFetch::class);
        class_exists(\Psalm\Node\Expr\VirtualTernary::class);
        class_exists(\Psalm\Node\Expr\VirtualThrow::class);
        class_exists(\Psalm\Node\Expr\VirtualUnaryMinus::class);
        class_exists(\Psalm\Node\Expr\VirtualUnaryPlus::class);
        class_exists(\Psalm\Node\Expr\VirtualVariable::class);
        class_exists(\Psalm\Node\Expr\VirtualYield::class);
        class_exists(\Psalm\Node\Expr\VirtualYieldFrom::class);
        class_exists(\Psalm\Node\Name\VirtualFullyQualified::class);
        class_exists(\Psalm\Node\Name\VirtualRelative::class);
        class_exists(\Psalm\Node\Scalar\MagicConst\VirtualClass::class);
        class_exists(\Psalm\Node\Scalar\MagicConst\VirtualDir::class);
        class_exists(\Psalm\Node\Scalar\MagicConst\VirtualFile::class);
        class_exists(\Psalm\Node\Scalar\MagicConst\VirtualFunction::class);
        class_exists(\Psalm\Node\Scalar\MagicConst\VirtualLine::class);
        class_exists(\Psalm\Node\Scalar\MagicConst\VirtualMethod::class);
        class_exists(\Psalm\Node\Scalar\MagicConst\VirtualNamespace::class);
        class_exists(\Psalm\Node\Scalar\MagicConst\VirtualTrait::class);
        class_exists(\Psalm\Node\Scalar\VirtualFloat::class);
        class_exists(\Psalm\Node\Scalar\VirtualInt::class);
        class_exists(\Psalm\Node\Scalar\VirtualInterpolatedString::class);
        class_exists(\Psalm\Node\Scalar\VirtualInterpolatedStringPart::class);
        class_exists(\Psalm\Node\Scalar\VirtualString::class);
        class_exists(\Psalm\Node\Stmt\TraitUseAdaptation\VirtualAlias::class);
        class_exists(\Psalm\Node\Stmt\TraitUseAdaptation\VirtualPrecedence::class);
        class_exists(\Psalm\Node\Stmt\VirtualBreak::class);
        class_exists(\Psalm\Node\Stmt\VirtualCase::class);
        class_exists(\Psalm\Node\Stmt\VirtualCatch::class);
        class_exists(\Psalm\Node\Stmt\VirtualClass::class);
        class_exists(\Psalm\Node\Stmt\VirtualClassConst::class);
        class_exists(\Psalm\Node\Stmt\VirtualClassMethod::class);
        class_exists(\Psalm\Node\Stmt\VirtualConst::class);
        class_exists(\Psalm\Node\Stmt\VirtualContinue::class);
        class_exists(\Psalm\Node\Stmt\VirtualDeclare::class);
        class_exists(\Psalm\Node\Stmt\VirtualDeclareItem::class);
        class_exists(\Psalm\Node\Stmt\VirtualDo::class);
        class_exists(\Psalm\Node\Stmt\VirtualEcho::class);
        class_exists(\Psalm\Node\Stmt\VirtualElse::class);
        class_exists(\Psalm\Node\Stmt\VirtualElseIf::class);
        class_exists(\Psalm\Node\Stmt\VirtualExpression::class);
        class_exists(\Psalm\Node\Stmt\VirtualFinally::class);
        class_exists(\Psalm\Node\Stmt\VirtualFor::class);
        class_exists(\Psalm\Node\Stmt\VirtualForeach::class);
        class_exists(\Psalm\Node\Stmt\VirtualFunction::class);
        class_exists(\Psalm\Node\Stmt\VirtualGlobal::class);
        class_exists(\Psalm\Node\Stmt\VirtualGoto::class);
        class_exists(\Psalm\Node\Stmt\VirtualGroupUse::class);
        class_exists(\Psalm\Node\Stmt\VirtualHaltCompiler::class);
        class_exists(\Psalm\Node\Stmt\VirtualIf::class);
        class_exists(\Psalm\Node\Stmt\VirtualInlineHTML::class);
        class_exists(\Psalm\Node\Stmt\VirtualInterface::class);
        class_exists(\Psalm\Node\Stmt\VirtualLabel::class);
        class_exists(\Psalm\Node\Stmt\VirtualNamespace::class);
        class_exists(\Psalm\Node\Stmt\VirtualNop::class);
        class_exists(\Psalm\Node\Stmt\VirtualProperty::class);
        class_exists(\Psalm\Node\Stmt\VirtualReturn::class);
        class_exists(\Psalm\Node\Stmt\VirtualStatic::class);
        class_exists(\Psalm\Node\Stmt\VirtualSwitch::class);
        class_exists(\Psalm\Node\Stmt\VirtualTrait::class);
        class_exists(\Psalm\Node\Stmt\VirtualTraitUse::class);
        class_exists(\Psalm\Node\Stmt\VirtualTryCatch::class);
        class_exists(\Psalm\Node\Stmt\VirtualUnset::class);
        class_exists(\Psalm\Node\Stmt\VirtualUse::class);
        class_exists(\Psalm\Node\Stmt\VirtualWhile::class);
        class_exists(\Psalm\Node\VirtualArg::class);
        class_exists(\Psalm\Node\VirtualArrayItem::class);
        class_exists(\Psalm\Node\VirtualAttribute::class);
        class_exists(\Psalm\Node\VirtualAttributeGroup::class);
        class_exists(\Psalm\Node\VirtualClosureUse::class);
        class_exists(\Psalm\Node\VirtualConst::class);
        class_exists(\Psalm\Node\VirtualIdentifier::class);
        class_exists(\Psalm\Node\VirtualMatchArm::class);
        class_exists(\Psalm\Node\VirtualName::class);
        class_exists(\Psalm\Node\VirtualNode::class);
        class_exists(\Psalm\Node\VirtualNullableType::class);
        class_exists(\Psalm\Node\VirtualParam::class);
        class_exists(\Psalm\Node\VirtualPropertyItem::class);
        class_exists(\Psalm\Node\VirtualStaticVar::class);
        class_exists(\Psalm\Node\VirtualUnionType::class);
        class_exists(\Psalm\Node\VirtualUseItem::class);
        class_exists(\Psalm\Node\VirtualVarLikeIdentifier::class);
        class_exists(\Psalm\PluginFileExtensionsSocket::class);
        class_exists(\Psalm\PluginRegistrationSocket::class);
        class_exists(\Psalm\Plugin\ArgTypeInferer::class);
        class_exists(\Psalm\Plugin\DynamicFunctionStorage::class);
        class_exists(\Psalm\Plugin\DynamicTemplateProvider::class);
        class_exists(\Psalm\Plugin\EventHandler\AddTaintsInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\AfterAnalysisInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\AfterClassLikeAnalysisInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\AfterClassLikeExistenceCheckInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\AfterClassLikeVisitInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\AfterCodebasePopulatedInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\AfterEveryFunctionCallAnalysisInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\AfterExpressionAnalysisInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\AfterFileAnalysisInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\AfterFunctionCallAnalysisInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\AfterFunctionLikeAnalysisInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\AfterMethodCallAnalysisInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\AfterStatementAnalysisInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\BeforeAddIssueInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\BeforeExpressionAnalysisInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\BeforeFileAnalysisInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\BeforeStatementAnalysisInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\DynamicFunctionStorageProviderInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\AddRemoveTaintsEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\AfterAnalysisEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\AfterClassLikeAnalysisEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\AfterClassLikeExistenceCheckEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\AfterClassLikeVisitEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\AfterCodebasePopulatedEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\AfterEveryFunctionCallAnalysisEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\AfterExpressionAnalysisEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\AfterFileAnalysisEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\AfterFunctionCallAnalysisEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\AfterFunctionLikeAnalysisEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\AfterMethodCallAnalysisEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\AfterStatementAnalysisEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\BeforeAddIssueEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\BeforeExpressionAnalysisEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\BeforeFileAnalysisEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\BeforeStatementAnalysisEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\DynamicFunctionStorageProviderEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\FunctionExistenceProviderEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\FunctionParamsProviderEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\FunctionReturnTypeProviderEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\MethodExistenceProviderEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\MethodParamsProviderEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\MethodReturnTypeProviderEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\MethodVisibilityProviderEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\PropertyExistenceProviderEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\PropertyTypeProviderEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\PropertyVisibilityProviderEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\Event\StringInterpreterEvent::class);
        class_exists(\Psalm\Plugin\EventHandler\FunctionExistenceProviderInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\FunctionParamsProviderInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\FunctionReturnTypeProviderInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\MethodExistenceProviderInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\MethodParamsProviderInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\MethodReturnTypeProviderInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\MethodVisibilityProviderInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\PropertyExistenceProviderInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\PropertyTypeProviderInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\PropertyVisibilityProviderInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\RemoveTaintsInterface::class);
        class_exists(\Psalm\Plugin\EventHandler\StringInterpreterInterface::class);
        class_exists(\Psalm\Plugin\FileExtensionsInterface::class);
        class_exists(\Psalm\Plugin\PluginEntryPointInterface::class);
        class_exists(\Psalm\Plugin\PluginFileExtensionsInterface::class);
        class_exists(\Psalm\Plugin\PluginInterface::class);
        class_exists(\Psalm\Plugin\RegistrationInterface::class);
        class_exists(\Psalm\Plugin\Shepherd::class);
        class_exists(\Psalm\Progress\DebugProgress::class);
        class_exists(\Psalm\Progress\DefaultProgress::class);
        class_exists(\Psalm\Progress\LongProgress::class);
        class_exists(\Psalm\Progress\Progress::class);
        class_exists(\Psalm\Progress\VoidProgress::class);
        class_exists(\Psalm\Report::class);
        class_exists(\Psalm\Report\ByIssueLevelAndTypeReport::class);
        class_exists(\Psalm\Report\CheckstyleReport::class);
        class_exists(\Psalm\Report\CodeClimateReport::class);
        class_exists(\Psalm\Report\CompactReport::class);
        class_exists(\Psalm\Report\ConsoleReport::class);
        class_exists(\Psalm\Report\CountReport::class);
        class_exists(\Psalm\Report\EmacsReport::class);
        class_exists(\Psalm\Report\GithubActionsReport::class);
        class_exists(\Psalm\Report\JsonReport::class);
        class_exists(\Psalm\Report\JsonSummaryReport::class);
        class_exists(\Psalm\Report\JunitReport::class);
        class_exists(\Psalm\Report\PhpStormReport::class);
        class_exists(\Psalm\Report\PylintReport::class);
        class_exists(\Psalm\Report\ReportOptions::class);
        class_exists(\Psalm\Report\SarifReport::class);
        class_exists(\Psalm\Report\SonarqubeReport::class);
        class_exists(\Psalm\Report\TextReport::class);
        class_exists(\Psalm\Report\XmlReport::class);
        class_exists(\Psalm\SourceControl\Git\CommitInfo::class);
        class_exists(\Psalm\SourceControl\Git\GitInfo::class);
        class_exists(\Psalm\SourceControl\Git\RemoteInfo::class);
        class_exists(\Psalm\SourceControl\SourceControlInfo::class);
        class_exists(\Psalm\StatementsSource::class);
        class_exists(\Psalm\Storage\Assertion::class);
        class_exists(\Psalm\Storage\Assertion\Any::class);
        class_exists(\Psalm\Storage\Assertion\ArrayKeyDoesNotExist::class);
        class_exists(\Psalm\Storage\Assertion\ArrayKeyExists::class);
        class_exists(\Psalm\Storage\Assertion\DoesNotHaveAtLeastCount::class);
        class_exists(\Psalm\Storage\Assertion\DoesNotHaveExactCount::class);
        class_exists(\Psalm\Storage\Assertion\DoesNotHaveMethod::class);
        class_exists(\Psalm\Storage\Assertion\Empty_::class);
        class_exists(\Psalm\Storage\Assertion\Falsy::class);
        class_exists(\Psalm\Storage\Assertion\HasArrayKey::class);
        class_exists(\Psalm\Storage\Assertion\HasAtLeastCount::class);
        class_exists(\Psalm\Storage\Assertion\HasExactCount::class);
        class_exists(\Psalm\Storage\Assertion\HasIntOrStringArrayAccess::class);
        class_exists(\Psalm\Storage\Assertion\HasMethod::class);
        class_exists(\Psalm\Storage\Assertion\HasStringArrayAccess::class);
        class_exists(\Psalm\Storage\Assertion\InArray::class);
        class_exists(\Psalm\Storage\Assertion\IsAClass::class);
        class_exists(\Psalm\Storage\Assertion\IsClassEqual::class);
        class_exists(\Psalm\Storage\Assertion\IsClassNotEqual::class);
        class_exists(\Psalm\Storage\Assertion\IsCountable::class);
        class_exists(\Psalm\Storage\Assertion\IsEqualIsset::class);
        class_exists(\Psalm\Storage\Assertion\IsGreaterThan::class);
        class_exists(\Psalm\Storage\Assertion\IsGreaterThanOrEqualTo::class);
        class_exists(\Psalm\Storage\Assertion\IsIdentical::class);
        class_exists(\Psalm\Storage\Assertion\IsIsset::class);
        class_exists(\Psalm\Storage\Assertion\IsLessThan::class);
        class_exists(\Psalm\Storage\Assertion\IsLessThanOrEqualTo::class);
        class_exists(\Psalm\Storage\Assertion\IsLooselyEqual::class);
        class_exists(\Psalm\Storage\Assertion\IsNotAClass::class);
        class_exists(\Psalm\Storage\Assertion\IsNotCountable::class);
        class_exists(\Psalm\Storage\Assertion\IsNotIdentical::class);
        class_exists(\Psalm\Storage\Assertion\IsNotIsset::class);
        class_exists(\Psalm\Storage\Assertion\IsNotLooselyEqual::class);
        class_exists(\Psalm\Storage\Assertion\IsNotType::class);
        class_exists(\Psalm\Storage\Assertion\IsType::class);
        class_exists(\Psalm\Storage\Assertion\NestedAssertions::class);
        class_exists(\Psalm\Storage\Assertion\NonEmpty::class);
        class_exists(\Psalm\Storage\Assertion\NonEmptyCountable::class);
        class_exists(\Psalm\Storage\Assertion\NotInArray::class);
        class_exists(\Psalm\Storage\Assertion\NotNestedAssertions::class);
        class_exists(\Psalm\Storage\Assertion\NotNonEmptyCountable::class);
        class_exists(\Psalm\Storage\Assertion\Truthy::class);
        class_exists(\Psalm\Storage\AttributeArg::class);
        class_exists(\Psalm\Storage\AttributeStorage::class);
        class_exists(\Psalm\Storage\ClassConstantStorage::class);
        class_exists(\Psalm\Storage\ClassLikeStorage::class);
        class_exists(\Psalm\Storage\CustomMetadataTrait::class);
        class_exists(\Psalm\Storage\EnumCaseStorage::class);
        class_exists(\Psalm\Storage\FileStorage::class);
        class_exists(\Psalm\Storage\FunctionLikeParameter::class);
        class_exists(\Psalm\Storage\FunctionLikeStorage::class);
        class_exists(\Psalm\Storage\FunctionStorage::class);
        class_exists(\Psalm\Storage\HasAttributesInterface::class);
        class_exists(\Psalm\Storage\ImmutableNonCloneableTrait::class);
        class_exists(\Psalm\Storage\MethodStorage::class);
        class_exists(\Psalm\Storage\Possibilities::class);
        class_exists(\Psalm\Storage\PropertyStorage::class);
        class_exists(\Psalm\Storage\UnserializeMemoryUsageSuppressionTrait::class);
        class_exists(\Psalm\Type::class);
        class_exists(\Psalm\Type\Atomic::class);
        class_exists(\Psalm\Type\Atomic\CallableTrait::class);
        class_exists(\Psalm\Type\Atomic\DependentType::class);
        class_exists(\Psalm\Type\Atomic\GenericTrait::class);
        class_exists(\Psalm\Type\Atomic\HasIntersectionTrait::class);
        class_exists(\Psalm\Type\Atomic\Scalar::class);
        class_exists(\Psalm\Type\Atomic\TAnonymousClassInstance::class);
        class_exists(\Psalm\Type\Atomic\TArray::class);
        class_exists(\Psalm\Type\Atomic\TArrayKey::class);
        class_exists(\Psalm\Type\Atomic\TBool::class);
        class_exists(\Psalm\Type\Atomic\TCallable::class);
        class_exists(\Psalm\Type\Atomic\TCallableInterface::class);
        class_exists(\Psalm\Type\Atomic\TCallableKeyedArray::class);
        class_exists(\Psalm\Type\Atomic\TCallableObject::class);
        class_exists(\Psalm\Type\Atomic\TCallableString::class);
        class_exists(\Psalm\Type\Atomic\TClassConstant::class);
        class_exists(\Psalm\Type\Atomic\TClassString::class);
        class_exists(\Psalm\Type\Atomic\TClassStringMap::class);
        class_exists(\Psalm\Type\Atomic\TClosedResource::class);
        class_exists(\Psalm\Type\Atomic\TClosure::class);
        class_exists(\Psalm\Type\Atomic\TConditional::class);
        class_exists(\Psalm\Type\Atomic\TDependentGetClass::class);
        class_exists(\Psalm\Type\Atomic\TDependentGetDebugType::class);
        class_exists(\Psalm\Type\Atomic\TDependentGetType::class);
        class_exists(\Psalm\Type\Atomic\TEmptyMixed::class);
        class_exists(\Psalm\Type\Atomic\TEmptyNumeric::class);
        class_exists(\Psalm\Type\Atomic\TEmptyScalar::class);
        class_exists(\Psalm\Type\Atomic\TEnumCase::class);
        class_exists(\Psalm\Type\Atomic\TFalse::class);
        class_exists(\Psalm\Type\Atomic\TFloat::class);
        class_exists(\Psalm\Type\Atomic\TGenericObject::class);
        class_exists(\Psalm\Type\Atomic\TInt::class);
        class_exists(\Psalm\Type\Atomic\TIntMask::class);
        class_exists(\Psalm\Type\Atomic\TIntMaskOf::class);
        class_exists(\Psalm\Type\Atomic\TIntRange::class);
        class_exists(\Psalm\Type\Atomic\TIterable::class);
        class_exists(\Psalm\Type\Atomic\TKeyOf::class);
        class_exists(\Psalm\Type\Atomic\TKeyedArray::class);
        class_exists(\Psalm\Type\Atomic\TLiteralClassString::class);
        class_exists(\Psalm\Type\Atomic\TLiteralFloat::class);
        class_exists(\Psalm\Type\Atomic\TLiteralInt::class);
        class_exists(\Psalm\Type\Atomic\TLiteralString::class);
        class_exists(\Psalm\Type\Atomic\TLowercaseString::class);
        class_exists(\Psalm\Type\Atomic\TMixed::class);
        class_exists(\Psalm\Type\Atomic\TNamedObject::class);
        class_exists(\Psalm\Type\Atomic\TNever::class);
        class_exists(\Psalm\Type\Atomic\TNonEmptyArray::class);
        class_exists(\Psalm\Type\Atomic\TNonEmptyLowercaseString::class);
        class_exists(\Psalm\Type\Atomic\TNonEmptyMixed::class);
        class_exists(\Psalm\Type\Atomic\TNonEmptyNonspecificLiteralString::class);
        class_exists(\Psalm\Type\Atomic\TNonEmptyScalar::class);
        class_exists(\Psalm\Type\Atomic\TNonEmptyString::class);
        class_exists(\Psalm\Type\Atomic\TNonFalsyString::class);
        class_exists(\Psalm\Type\Atomic\TNonspecificLiteralInt::class);
        class_exists(\Psalm\Type\Atomic\TNonspecificLiteralString::class);
        class_exists(\Psalm\Type\Atomic\TNull::class);
        class_exists(\Psalm\Type\Atomic\TNumeric::class);
        class_exists(\Psalm\Type\Atomic\TNumericString::class);
        class_exists(\Psalm\Type\Atomic\TObject::class);
        class_exists(\Psalm\Type\Atomic\TObjectWithProperties::class);
        class_exists(\Psalm\Type\Atomic\TPropertiesOf::class);
        class_exists(\Psalm\Type\Atomic\TResource::class);
        class_exists(\Psalm\Type\Atomic\TScalar::class);
        class_exists(\Psalm\Type\Atomic\TSingleLetter::class);
        class_exists(\Psalm\Type\Atomic\TString::class);
        class_exists(\Psalm\Type\Atomic\TTemplateIndexedAccess::class);
        class_exists(\Psalm\Type\Atomic\TTemplateKeyOf::class);
        class_exists(\Psalm\Type\Atomic\TTemplateParam::class);
        class_exists(\Psalm\Type\Atomic\TTemplateParamClass::class);
        class_exists(\Psalm\Type\Atomic\TTemplatePropertiesOf::class);
        class_exists(\Psalm\Type\Atomic\TTemplateValueOf::class);
        class_exists(\Psalm\Type\Atomic\TTraitString::class);
        class_exists(\Psalm\Type\Atomic\TTrue::class);
        class_exists(\Psalm\Type\Atomic\TTypeAlias::class);
        class_exists(\Psalm\Type\Atomic\TUnknownClassString::class);
        class_exists(\Psalm\Type\Atomic\TValueOf::class);
        class_exists(\Psalm\Type\Atomic\TVoid::class);
        class_exists(\Psalm\Type\MutableTypeVisitor::class);
        class_exists(\Psalm\Type\MutableUnion::class);
        class_exists(\Psalm\Type\Reconciler::class);
        class_exists(\Psalm\Type\TaintKind::class);
        class_exists(\Psalm\Type\TaintKindGroup::class);
        class_exists(\Psalm\Type\TypeNode::class);
        class_exists(\Psalm\Type\TypeVisitor::class);
        class_exists(\Psalm\Type\Union::class);
        class_exists(\Psalm\Type\UnionTrait::class);

        self::$preloaded = true;
    }
}
